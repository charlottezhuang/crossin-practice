“\b”在正则表达式中表示单词的开头或结尾，空格、标点、换行都算是单词的分割。而“\b”自身又不会匹配任何字符，它代表的只是一个位置。所以单词前后的空格标点之类不会出现在结果里。

r"hi" 这里字符串前面加了r，是raw的意思，它表示对字符串不进行转义。

“.”在正则表达式中表示除换行符以外的任意字符。
与“.”类似的一个符号是“\S”，它表示的是不是空白符的任意字符。
[]表示满足括号中任一字符。比如“[hi]”，它就不是匹配“hi”了，而是匹配“h”或者“i”。“[Hh]i”，就可以既匹配“Hi”，又匹配“hi”了。
在很多搜索中，会用“?”表示任意一个字符，“*”表示任意数量连续字符，这种被称为通配符。但在正则表达式中，任意字符是用“.”表示，而“*”则不是表示字符，而是表示数量：它表示前面的字符可以重复任意多次（包括0次）
“*”在匹配时，会匹配尽可能长的结果。如果你想让他匹配到最短的就停止，需要用“.*?”。如“I.*?e”
*表示的任意长度包括0，也就是没有数字的空字符也会被匹配出来。一个与*类似的符号+，表示的则是1个或更长。
要表示任意长度的数字，就可以用
[0-9]*
或者
\d*
如果要限定长度，就用{}代替+，大括号里写上你想要的长度。比如11位的数字：
\d{11}
想要再把第一位限定为1，就在前面加上1，后面去掉一位：
1\d{10}
用（）框出实际想要输出的东西，使标签不被打印出来。对于个别的标签，运用文本对象的替代方法替代为空

符号	说明
.	匹配除换行符以外的任意字符
\w	匹配字母或数字或下划线或汉字
\s	匹配任意的空白符
\d	匹配数字
\b	匹配单词的开始或结束
[aeiou]	匹配aeiou这几个字母中的任意字符
^	匹配字符串的开始
$	匹配字符串的结束
*	重复零次或更多次
+	重复一次或更多次
?	重复零次或一次
{n}	重复n次
{n,}	重复n次或更多次
{n,m}	重复n到m次
\W	匹配任意不是字母，数字，下划线，汉字的字符
\S	匹配任意不是空白符的字符
\D	匹配任意非数字的字符
\B	匹配不是单词开头或结束的位置
[^x]	匹配除了x以外的任意字符
[^aeiou]	匹配除了aeiou这几个字母以外的任意字符
